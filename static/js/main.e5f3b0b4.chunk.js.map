{"version":3,"sources":["components/MileageForm.tsx","components/Infographic.tsx","utils/calculations.ts","components/GlobeVisualization.tsx","App.tsx","index.tsx"],"names":["MileageForm","_ref","onSubmit","mileage","setMileage","useState","_jsxs","e","preventDefault","value","parseFloat","replace","isNaN","children","_jsx","type","onChange","target","placeholder","min","required","Infographic","laps","calculateLapsAroundEarth","distanceToMoon","Math","max","calculateDistanceToMoon","remainingLaps","className","toFixed","src","alt","EARTH_CIRCUMFERENCE","DISTANCE_TO_MOON","GlobeVisualization","lapsAroundEarth","remainingToLap","remainingToMoon","moonProgress","style","width","concat","floor","App","mileageValue","container","document","getElementById","ReactDOM","createRoot","render","React","StrictMode"],"mappings":"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","file":"static/js/main.e5f3b0b4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\ntype MileageFormProps = {\r\n  onSubmit: (mileage: number) => void;\r\n};\r\n\r\nconst MileageForm: React.FC<MileageFormProps> = ({ onSubmit }) => {\r\n  const [mileage, setMileage] = useState<string>(\"\");\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const value = parseFloat(mileage.replace(\",\", \".\"));\r\n    if (!isNaN(value) && value >= 0) {\r\n      onSubmit(value);\r\n      setMileage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Digite a quilometragem do seu carro:\r\n        <input\r\n          type=\"number\"\r\n          value={mileage}\r\n          onChange={(e) => setMileage(e.target.value)}\r\n          placeholder=\"Ex: 50000\"\r\n          min=\"0\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Calcular</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MileageForm;","import React from 'react';\r\nimport { calculateLapsAroundEarth, calculateDistanceToMoon } from '../utils/calculations';\r\n\r\ninterface InfographicProps {\r\n    mileage: number;\r\n}\r\n\r\nconst Infographic: React.FC<InfographicProps> = ({ mileage }) => {\r\n    const laps = calculateLapsAroundEarth(mileage);\r\n    const distanceToMoon = calculateDistanceToMoon(mileage);\r\n    const remainingLaps = laps < 1 ? 1 - laps : 0;\r\n\r\n    return (\r\n        <div className=\"infographic\">\r\n            <h2>Infographic</h2>\r\n            <div className=\"mileage-info\">\r\n                <p>Total Mileage: {mileage} km</p>\r\n                <p>Laps Around Earth: {laps.toFixed(2)}</p>\r\n                {remainingLaps > 0 && <p>Remaining Laps to Complete One: {remainingLaps.toFixed(2)}</p>}\r\n                <p>Distance to Moon: {distanceToMoon.toFixed(2)} km</p>\r\n            </div>\r\n            <div className=\"visualization\">\r\n                <img src=\"/kms/images/earth.svg\" alt=\"Earth\" className=\"earth-image\" />\r\n                <img src=\"/kms/images/moon.svg\" alt=\"Moon\" className=\"moon-image\" />\r\n                {/* Visualization logic will go here */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Infographic;","// Circunferência da Terra em km\r\nconst EARTH_CIRCUMFERENCE_KM = 40075;\r\n// Distância média da Terra à Lua em km\r\nconst EARTH_TO_MOON_KM = 384400;\r\n\r\nexport function calculateLapsAroundEarth(mileage: number): number {\r\n    return mileage / EARTH_CIRCUMFERENCE_KM;\r\n}\r\n\r\nexport function calculateDistanceToMoon(mileage: number): number {\r\n    // Retorna quanto falta para chegar na Lua (se já passou, retorna 0)\r\n    return Math.max(EARTH_TO_MOON_KM - mileage, 0);\r\n}","import React from 'react';\r\nimport './GlobeVisualization.css';\r\n\r\ninterface GlobeVisualizationProps {\r\n    mileage: number;\r\n}\r\n\r\nconst EARTH_CIRCUMFERENCE = 40075; // km\r\nconst DISTANCE_TO_MOON = 384400;   // km\r\n\r\nconst GlobeVisualization: React.FC<GlobeVisualizationProps> = ({ mileage }) => {\r\n    const lapsAroundEarth = mileage / EARTH_CIRCUMFERENCE;\r\n    const remainingToLap = EARTH_CIRCUMFERENCE - (mileage % EARTH_CIRCUMFERENCE);\r\n    const remainingToMoon = DISTANCE_TO_MOON - mileage;\r\n    const moonProgress = Math.min((mileage / DISTANCE_TO_MOON) * 100, 100);\r\n\r\n    return (\r\n        <div className=\"globe-visualization\">\r\n            <div className=\"earth\">\r\n                <img src=\"/kms/images/earth.svg\" alt=\"Terra\" className=\"earth-image\" />\r\n            </div>\r\n            <div className=\"moon\">\r\n                <img src=\"/kms/images/moon.svg\" alt=\"Lua\" className=\"moon-image\" />\r\n            </div>\r\n            <div className=\"progress-bar-container\">\r\n                <div className=\"progress-bar\" style={{ width: `${moonProgress}%` }}></div>\r\n            </div>\r\n            <div className=\"info\">\r\n                <p>Voltas completas na Terra: {Math.floor(lapsAroundEarth)}</p>\r\n                <p>Km para completar a próxima volta: {remainingToLap.toFixed(2)}</p>\r\n                <p>\r\n                    {mileage >= DISTANCE_TO_MOON\r\n                        ? 'Já chegou na Lua!'\r\n                        : `Faltam ${remainingToMoon.toFixed(2)} km para a Lua`}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GlobeVisualization;","import React, { useState } from 'react';\r\nimport MileageForm from './components/MileageForm';\r\nimport Infographic from './components/Infographic';\r\nimport GlobeVisualization from './components/GlobeVisualization';\r\nimport './styles/main.css';\r\n\r\nconst App = () => {\r\n    const [mileage, setMileage] = useState(0);\r\n\r\n    const handleMileageSubmit = (mileageValue) => {\r\n        setMileage(mileageValue);\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <h1>Car Mileage Visualizer</h1>\r\n            <MileageForm onSubmit={handleMileageSubmit} />\r\n            <Infographic mileage={mileage} />\r\n            <GlobeVisualization mileage={mileage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './styles/main.css';\r\n\r\nconst container = document.getElementById('root');\r\nif (container) {\r\n  const root = ReactDOM.createRoot(container);\r\n  root.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  );\r\n}"],"sourceRoot":""}