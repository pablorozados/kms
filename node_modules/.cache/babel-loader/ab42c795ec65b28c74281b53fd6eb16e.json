{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablo\\\\Documents\\\\github\\\\Kms\\\\kms\\\\car-mileage-visualizer\\\\src\\\\components\\\\GlobeVisualization.tsx\";\nimport React from 'react';\nimport './GlobeVisualization.css'; // Assuming you will create a CSS file for styles\nimport earthImage from \"../../public/images/earth.svg\";\nimport moonImage from \"../../public/images/moon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EARTH_CIRCUMFERENCE = 40075; // in kilometers\nconst DISTANCE_TO_MOON = 384400; // in kilometers\n\nconst GlobeVisualization = ({\n  mileage\n}) => {\n  const lapsAroundEarth = mileage / EARTH_CIRCUMFERENCE;\n  const distanceToMoon = mileage / DISTANCE_TO_MOON;\n  const remainingToLap = EARTH_CIRCUMFERENCE - mileage % EARTH_CIRCUMFERENCE;\n  const remainingToMoon = DISTANCE_TO_MOON - mileage;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"globe-visualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"earth\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: earthImage,\n        alt: \"Earth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"path\",\n        style: {\n          width: `${lapsAroundEarth * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moon\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: moonImage,\n        alt: \"Moon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distance\",\n        style: {\n          width: `${distanceToMoon * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Laps around the Earth: \", Math.floor(lapsAroundEarth)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Remaining kilometers to complete a lap: \", remainingToLap.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Distance to the Moon: \", mileage >= DISTANCE_TO_MOON ? 'Reached the Moon!' : `${remainingToMoon.toFixed(2)} km to the Moon`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = GlobeVisualization;\nexport default GlobeVisualization;\nvar _c;\n$RefreshReg$(_c, \"GlobeVisualization\");","map":{"version":3,"names":["React","earthImage","moonImage","jsxDEV","_jsxDEV","EARTH_CIRCUMFERENCE","DISTANCE_TO_MOON","GlobeVisualization","mileage","lapsAroundEarth","distanceToMoon","remainingToLap","remainingToMoon","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","width","Math","floor","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/pablo/Documents/github/Kms/kms/car-mileage-visualizer/src/components/GlobeVisualization.tsx"],"sourcesContent":["import React from 'react';\nimport './GlobeVisualization.css'; // Assuming you will create a CSS file for styles\nimport earthImage from '../../public/images/earth.svg';\nimport moonImage from '../../public/images/moon.svg';\n\ninterface GlobeVisualizationProps {\n    mileage: number; // Total mileage input by the user\n}\n\nconst EARTH_CIRCUMFERENCE = 40075; // in kilometers\nconst DISTANCE_TO_MOON = 384400; // in kilometers\n\nconst GlobeVisualization: React.FC<GlobeVisualizationProps> = ({ mileage }) => {\n    const lapsAroundEarth = mileage / EARTH_CIRCUMFERENCE;\n    const distanceToMoon = mileage / DISTANCE_TO_MOON;\n\n    const remainingToLap = EARTH_CIRCUMFERENCE - (mileage % EARTH_CIRCUMFERENCE);\n    const remainingToMoon = DISTANCE_TO_MOON - mileage;\n\n    return (\n        <div className=\"globe-visualization\">\n            <div className=\"earth\">\n                <img src={earthImage} alt=\"Earth\" />\n                <div className=\"path\" style={{ width: `${lapsAroundEarth * 100}%` }}></div>\n            </div>\n            <div className=\"moon\">\n                <img src={moonImage} alt=\"Moon\" />\n                <div className=\"distance\" style={{ width: `${distanceToMoon * 100}%` }}></div>\n            </div>\n            <div className=\"info\">\n                <p>Laps around the Earth: {Math.floor(lapsAroundEarth)}</p>\n                <p>Remaining kilometers to complete a lap: {remainingToLap.toFixed(2)}</p>\n                <p>Distance to the Moon: {mileage >= DISTANCE_TO_MOON ? 'Reached the Moon!' : `${remainingToMoon.toFixed(2)} km to the Moon`}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default GlobeVisualization;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B,CAAC,CAAC;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQnC,MAAMC,mBAAmB,GAAG,KAAK,CAAC,CAAC;AACnC,MAAMC,gBAAgB,GAAG,MAAM,CAAC,CAAC;;AAEjC,MAAMC,kBAAqD,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC3E,MAAMC,eAAe,GAAGD,OAAO,GAAGH,mBAAmB;EACrD,MAAMK,cAAc,GAAGF,OAAO,GAAGF,gBAAgB;EAEjD,MAAMK,cAAc,GAAGN,mBAAmB,GAAIG,OAAO,GAAGH,mBAAoB;EAC5E,MAAMO,eAAe,GAAGN,gBAAgB,GAAGE,OAAO;EAElD,oBACIJ,OAAA;IAAKS,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChCV,OAAA;MAAKS,SAAS,EAAC,OAAO;MAAAC,QAAA,gBAClBV,OAAA;QAAKW,GAAG,EAAEd,UAAW;QAACe,GAAG,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpChB,OAAA;QAAKS,SAAS,EAAC,MAAM;QAACQ,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAGb,eAAe,GAAG,GAAG;QAAI;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eACNhB,OAAA;MAAKS,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBV,OAAA;QAAKW,GAAG,EAAEb,SAAU;QAACc,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClChB,OAAA;QAAKS,SAAS,EAAC,UAAU;QAACQ,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAGZ,cAAc,GAAG,GAAG;QAAI;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,eACNhB,OAAA;MAAKS,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBV,OAAA;QAAAU,QAAA,GAAG,yBAAuB,EAACS,IAAI,CAACC,KAAK,CAACf,eAAe,CAAC;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3DhB,OAAA;QAAAU,QAAA,GAAG,0CAAwC,EAACH,cAAc,CAACc,OAAO,CAAC,CAAC,CAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1EhB,OAAA;QAAAU,QAAA,GAAG,wBAAsB,EAACN,OAAO,IAAIF,gBAAgB,GAAG,mBAAmB,GAAG,GAAGM,eAAe,CAACa,OAAO,CAAC,CAAC,CAAC,iBAAiB;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACM,EAAA,GAxBInB,kBAAqD;AA0B3D,eAAeA,kBAAkB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}